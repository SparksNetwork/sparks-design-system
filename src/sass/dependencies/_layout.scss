/// ========================================================================
/// DEPENDENCIES LAYOUT
/// ========================================================================

/// Screen Only
@mixin mq-screen {

  @media (only-screen) {
    @content;
  }
}



/// TINY - 320px - 20rem
@mixin mq-x-small-min {

  @media (min-width: pem($mq-x-small)) {
    @content;
  }
}

@mixin mq-x-small-max {

  @media (max-width: pem($mq-x-small)) {
    @content;
  }
}



/// SMALL - 480px - 30rem
@mixin mq-small-min {

  @media (min-width: pem($mq-small)) {
    @content;
  }
}

@mixin mq-small-max {

  @media (max-width: pem($mq-small)) {
    @content;
  }
}



///  MEDIUM - 768px - 48rem
@mixin mq-medium-min {

  @media (min-width: pem($mq-medium)) {
    @content;
  }
}

@mixin mq-medium-max {

  @media (max-width: pem($mq-medium)) {
    @content;
  }
}



/// LARGE - 1024px - 64rem
@mixin mq-large-min {

  @media (min-width: pem($mq-large)) {
    @content;
  }
}

@mixin mq-large-max {

  @media (max-width: pem($mq-large)) {
    @content;
  }
}



/// X-LARGE - 1224px - 76.5rem
@mixin mq-x-large-min {

  @media (min-width: pem(1224px)) {
    @content;
  }
}

@mixin mq-x-large-max {

  @media (max-width: pem(1224px)) {
    @content;
  }
}



/// XX-LARGE - 1824px - 114rem
@mixin mq-xx-large-min {

  @media (min-width: pem(1824px)) {
    @content;
  }
}

@mixin mq-xx-large-max {

  @media (max-width: pem(1824px)) {
    @content;
  }
}



/// XXX-LARGE - 2432px - 152rem
@mixin mq-xxx-large-min {

  @media (min-width: pem(2432px)) {
    @content;
  }
}

@mixin mq-xxx-large-max {

  @media (max-width: pem(2432px)) {
    @content;
  }
}



@mixin spacing($property) {
  $prop-prefix: null;
  $positions: top right bottom left;

  @if $property == margin {
    $prop-prefix: 'm';
  }

  @else if $property == padding {
    $prop-prefix: 'p';
  }

  @each $token, $size in $spacing-map {

    @each $position in $positions {
      @if $size == 0 {
        .u-#{$prop-prefix}-#{$position}--#{$token} {
          #{$property}-#{$position}: 0 !important;
        }
      }

      .u-#{$prop-prefix}-#{$position}--#{$token} {
        #{$property}-#{$position}: $size;
      }
    }

    .u-#{$prop-prefix}-vertical--#{$token} {
      #{$property}-top: $size;
      #{$property}-bottom: $size;
    }

    .u-#{$prop-prefix}-horizontal--#{$token} {
      #{$property}-right: $size;
      #{$property}-left: $size;
    }

    .u-#{$prop-prefix}-around--#{$token} {
      #{$property}: $size;
    }
  }
}



@mixin square($size) {
  width: $size;
  height: $size;
}
